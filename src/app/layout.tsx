import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { ThemeProvider } from "@/components/theme/theme-provider";
import { NextSSRPlugin } from "@uploadthing/react/next-ssr-plugin";
import { ourFileRouter } from "./api/uploadthing/core";
import { extractRouterConfig } from "uploadthing/server";
import "@uploadthing/react/styles.css";
import { Inter, Poppins } from "next/font/google";
import { AuthContextProvider } from "@/contexts/auth-context.provider";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});
const inter = Inter({
  variable: "--font-inter",
  subsets: ["latin"],
});
const secondary = Poppins({
  variable: "--font-secondary",
  subsets: ["latin"],
  weight: "800",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${inter.className} ${secondary.variable} antialiased`}
      >
        <AuthContextProvider>
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            <NextSSRPlugin
              routerConfig={
                extractRouterConfig(ourFileRouter)
              }
            />
            {/* <AnimatedCursor /> */}
            {children}
          </ThemeProvider>
        </AuthContextProvider>
      </body>
    </html>
  );
}
